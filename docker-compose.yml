services:
  frontend:
    build:
      context: ./my-app
    ports:
      - "3000:80"
    depends_on:
      - backend

  backend:
    build:
      context: ./Backend
    command: gunicorn config.wsgi:application \
      --certfile=cert.pem \
      --keyfile=key.pem \
      --bind 0.0.0.0:8000
    volumes:
      - ./Backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

  # backend:
  #   build:
  #     context: ./Backend
  #   command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
  #   volumes:
  #     - ./Backend:/app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - EMAIL_HOST_USER=${EMAIL_HOST_USER}
  #     - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  pgdata:
